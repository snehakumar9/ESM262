---
title: "Assignment 5"
author: "Sneha, Bella, and Kyle"
format: pdf
editor: visual
---

```{r}
library(purrr)
library(ggplot2)
library(tidyverse)
library(testthat)

```

Design a function - you can pick any subject and you can even make up the equations as long as they conceptually make sense Make sure it has at least 2 inputs and 1 parameter (ideally more) and at least 2 outputs Code your function in R, save as a R file in subdirectory called R Make sure you include documentation (both at the top as we've shown in past examples, and inline). Include some error checking

The function created is called "function_name.r"

In an Quatro file, generate some data for 2 of the function inputs

```{r}
library(here)
treeID <- c(1:500)
tree_data <- data.frame(treeID,
                        diameter = rnorm(500, mean=22, sd=5),
                        height = rnorm(500, mean=15, sd=3),
                        tree_dimensions = NA,
                        tree_biomass = NA
                        )
View(tree_data)

source(here::here("Function", "forest_sequestration.R"))

# If raw tree data is provided by user, calculate the averages and density.
# if (!is.null(tree_data)) {
    # diameter <- mean(tree_data$diameter, na.rm = TRUE)
    # height   <- mean(tree_data$height, na.rm = TRUE) }
  
  # Combine tree dimensions into single variable for clarity / modularity
  # tree_dimensions <- pi * (diameter/2)^2*height
  
  # Estimate biomass per tree based on combined tree dimensions
  # biomass_per_tree <- bm_conversion_factor * tree_dimensions
  
  # Total biomass per hectare (in tons)
  # total_biomass <- tree_density * biomass_per_tree
  
  # Annual forest carbon sequestration: (growth-related biomass increase) * (carbon fraction)
  # annual_sequestration <- total_biomass * growth_rate * carbon_fraction
```

Question 1: use a *for* loop to run the function for the data

```{r}
for(i in 1:nrow(tree_data)){tree_data$tree_dimensions = tree_data$diameter[i]*tree_data$height[i]}

for(i in tree_data$treeID[i]) {tree_data$tree_biomass = forest_sequestration(diameter = tree_data$diameter,
                                                                             height= tree_data$height)}
View(tree_data)
```

Question 2: repeat the "looping" using something from the "purrr" package

```{r}
library(purrr)
#running function for each value in parameters with pmap
#turn into dataframe
ftsn2 <- as.data.frame(pmap(list(diameter = tree_data$diameter,
                                    height = tree_data$height),
                               forest_sequestration))
colnames(ftsn2) <- c(1:500)
View(ftsn2)


ftsn2_longer <- pivot_longer(ftsn2_df, cols = everything(), names_to = "treeID", values_to = "FtSn")

View(ftsn2_dflonger)
```

Question 3: Graph results (you can decide what the most interesting way to graph - you just need to make one graph)

```{r}

```

Question 4: Write at least 2 tests for your function; store in a separate test file

```{r}
source("Function/forest_sequestration.R")
test_file("testing/ftsn_testing.R")
```

Put this in a git repo that includes an R subdirectory, a tests subsdirectory and your Quatro file and submit the link on Canvas (you can put all of this in a new git repo or a subdirectory of an existing git repo).

Submit the link to repo on Canvas (and name of subdirectory if part of a larger git project) as a group with your partner,
